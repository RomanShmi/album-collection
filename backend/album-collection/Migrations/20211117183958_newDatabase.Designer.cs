// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using album_collection;

namespace album_collection.Migrations
{
    [DbContext(typeof(AlbumsContext))]
    [Migration("20211117183958_newDatabase")]
    partial class newDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Labe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Image = "https://1071theboss.com/wp-content/uploads/2020/05/1091.jpg",
                            Title = "The Wall"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            Image = "https://www.udiscovermusic.com/wp-content/uploads/2017/04/The-Rolling-Stones-Debut-Album.jpg",
                            Title = "The Rolling Stones"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            Image = "https://i.pinimg.com/originals/8a/e8/8a/8ae88a537aefdbb5dc3347554601b330.jpg",
                            Title = "Oops!...I Did It Again"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            Image = "https://target.scene7.com/is/image/Target/GUEST_0c04bcc2-b529-4b14-9a43-5122f7c1b379?wid=325&hei=325&qlt=80&fmt=webp",
                            Title = "Born This Way"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            Image = "https://images.complex.com/complex/images/c_fill,dpr_auto,f_auto,q_auto,w_1400/fl_lossy,pg_1/l1c9h415wrvx1bg3uacd/reasonable-doubt?fimg-client-default",
                            Title = "Reasonable Doubt"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pink Floyd"
                        },
                        new
                        {
                            Id = 2,
                            Name = "The Rolling Stones"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Britney Spears"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lady Gaga"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Jay-Z"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Name = "Jaxxon",
                            ReviewContent = "The Wall is not just classic stoner music but also great for those of us who are interested in music that challenges societal norms and has a great rhythm to each piece."
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 2,
                            Name = "Eli",
                            ReviewContent = "4/5 :)"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            Name = "Dawna",
                            ReviewContent = "FREE BRITNEY!!!!"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 4,
                            Name = "Roman",
                            ReviewContent = "Gr8 Album"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 5,
                            Name = "Jay",
                            ReviewContent = "Best rapper ever!!!! 10/10 Recommend"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Title = "Another Brick In The Wall"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Title = "Goodbye Blue Sky"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 2,
                            Title = "Route 66"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 2,
                            Title = "Little By Little"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 3,
                            Title = "Oops!...I Did It Again"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 3,
                            Title = "Lucky"
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 4,
                            Title = "Born This Way"
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 4,
                            Title = "Judas"
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 5,
                            Title = "Can't Knock The Hustle"
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 5,
                            Title = "Feelin' It"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.HasOne("album_collection.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("album_collection.Models.Review", b =>
                {
                    b.HasOne("album_collection.Models.Album", "Album")
                        .WithMany("Reviews")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("album_collection.Models.Song", b =>
                {
                    b.HasOne("album_collection.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("album_collection.Models.Artist", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
